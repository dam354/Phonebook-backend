{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/person.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["Person","numbers","filter","deleteName","x","name","toLowerCase","includes","number","map","key","onClick","window","confirm","id","Filter","value","handleFilterChange","onChange","PersonForm","props","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","disabled","length","baseUrl","getAll","a","request","axios","get","response","data","addNumber","newObject","post","updateNumber","put","deleteNumber","delete","Notification","message","success","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","persons","setPersons","setNewName","setNewNumber","newFilter","setNewFitler","notification","setNotification","setSuccess","useEffect","personService","then","console","log","updateName","person","find","catch","error","n","resetNotification","resetInputs","setTimeout","e","target","preventDefault","alert","concat","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7df36b68.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Person = ({ numbers, filter, deleteName }) => {\n  // console.log(filter)\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <ul>\n        {numbers\n          .filter(x => {\n            if (\n              x.name.toLowerCase().includes(filter) ||\n              x.number.toLowerCase().includes(filter)\n            ) {\n              return x;\n            } else {\n              return null;\n            }\n          })\n          .map(x => (\n            <li key={x.name}>\n              {\" \"}\n              {x.name}: {x.number}{\" \"}\n              <button\n                onClick={() => {\n                  if (\n                    window.confirm(\n                      `Do you want to delete ${x.name}: ${x.number}`\n                    )\n                  ) {\n                    deleteName(x.id);\n                  }\n                }}\n              >\n                Delete\n  </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from 'react'\n\nconst Filter = ({ value, handleFilterChange }) => {\n\n\n    return (\n        <form>\n            <p>filter show with</p>\n            <input value={value} onChange={handleFilterChange} />\n        </form>\n    )\n}\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = props => {\n    const {\n        addName,\n        newName,\n        handleNameChange,\n        newNumber,\n        handleNumberChange\n    } = props;\n    return (\n        <div>\n            <h2>Add a new</h2>\n            <form onSubmit={addName}>\n                <div>\n                    Name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                    Number: <input value={newNumber} onChange={handleNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\" disabled={newName.length === 0}>add</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default PersonForm;\n","import axios from 'axios'\nconst baseUrl = 'https://fathomless-woodland-99544.herokuapp.com/api/persons'\n\nconst getAll = async () => {\n    const request = axios.get(baseUrl)\n    const response = await request\n    return response.data\n}\n\nconst addNumber = async (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    const response = await request\n    return response.data\n}\n\nconst updateNumber = async (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    await request\n    return getAll()\n}\n\nconst deleteNumber = async (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n\n    await request\n    return getAll()\n}\nexport default { addNumber, getAll, deleteNumber, updateNumber }","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n    if (message === null) {\n        return null\n    }\n\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px',\n\n    }\n\n    if (success) {\n        errorStyle.color = \"green\"\n    }\n\n    return (\n        <div style={errorStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from \"react\";\n\nimport Person from \"./components/Person\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/person\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const [newFilter, setNewFitler] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [success, setSuccess] = useState(true);\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      console.log(\"get people\", response);\n      setPersons(response);\n    });\n  }, []);\n\n  const handleFilterChange = e => {\n    // console.log(e.target.value)\n    setNewFitler(e.target.value);\n  };\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const nameValidate = () => {\n    if (persons.find(x => x.name === newName) || newName === \"\") {\n      updateName();\n      resetInputs();\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const NumberValidate = () => {\n    if (persons.find(x => x.number === newNumber) || newNumber === \"\") {\n      alert(`The number already exists`);\n      resetInputs();\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const addName = e => {\n    e.preventDefault();\n\n    if (nameValidate() && NumberValidate()) {\n      const person = {\n        name: newName,\n        number: newNumber\n      };\n\n      personService\n        .addNumber(person)\n        .then(person => {\n          setPersons(persons.concat(person));\n          setNotification(`${person.name}s added to the phonebook.`);\n          resetInputs();\n        })\n        .catch(error => {\n          setSuccess(false);\n          setNotification(`${person.name}' was already deleted from server`);\n          setPersons(persons.filter(n => n.name !== person.name));\n        });\n      resetNotification();\n    }\n  };\n  const deleteName = person => {\n    personService.deleteNumber(person).then(response => setPersons(response));\n  };\n  const updateName = () => {\n    if (\n      window.confirm(\n        `${newName} Already Exists would you like to overwrite the old number?`\n      )\n    ) {\n      const person = persons.find(x => x.name === newName);\n      person.number = newNumber;\n      personService\n        .updateNumber(person.id, person)\n        .then(response => {\n          // console.log(response)\n          setPersons(response);\n        })\n        .catch(error => {\n          setSuccess(false);\n          setNotification(`${person.name}' was already deleted from server`);\n          setPersons(persons.filter(n => n.name !== person.name));\n        });\n      setNotification(`${person.name}'s number has been updated.`);\n      resetNotification();\n    }\n  };\n\n  const resetInputs = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  const resetNotification = () => {\n    setTimeout(() => {\n      setSuccess(true);\n      setNotification(null);\n    }, 5000);\n  };\n\n  return (\n    <div>\n      <Notification success={success} message={notification} />\n      <h2>Phonebook</h2>\n      <Filter value={newFilter} handleFilterChange={handleFilterChange} />\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <Person\n        numbers={persons}\n        filter={newFilter.toLowerCase()}\n        deleteName={deleteName}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}